module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },

  ignorePatterns: ['.eslintrc.js'],
  rules: {
    'no-empty-function': 'off',
    'no-empty-pattern': 'off',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/no-explicit-any': 'error',
    '@typescript-eslint/promise-function-async': 'error',
    '@typescript-eslint/await-thenable': 'error',
    curly: 'error',
    'prefer-for-of': 'error',
    'guard-for-in': 'error',
    'no-console': ['error', { allow: ['log', 'error'] }],
    'no-debugger': 'error',
    'constructor-super': 'error',
    'no-duplicate-case': 'error',
    'no-template-curly-in-string': 'error',
    'no-new-symbol': 'error',
    '@typescript-eslint/return-await': 'error',
    'no-shadow': 'error',
    'no-fallthrough': 'error',
    'no-constant-condition': ['error', { checkLoops: false }],
    'no-unused-vars': 'error',
    'no-var': 'error',
    'class-methods-use-this': 'error',
    'default-case': 'error',
    eqeqeq: 'off',
    '@typescript-eslint/no-require-imports': 'off',
    'prefer-const': 'error',
    'arrow-body-style': ['error', 'as-needed'],
    camelcase: 'error',
    // 'id-match': ['error', '^[a-z]+(-[a-z]+)*$', { properties: true }],
    'prefer-switch': ['error', { minCases: 3 }],
    'switch-colon-spacing': ['error', { before: false, after: true }],
    'import-spacing': 'error',
    'max-len': ['error', { code: 120 }],
    'no-trailing-spaces': 'off',
    quotes: ['error', 'single'],
    semi: ['error', 'always'],
    'comma-dangle': ['error', 'never'],
    indent: ['error', 'tab', { SwitchCase: 1 }],

    'prettier/prettier': [
      'error',
      {
        singleQuote: true,
        useTabs: true,
        semi: true,
        trailingComma: 'all',
        bracketSpacing: true,
        printWidth: 100,
        endOfLine: 'auto',
      },
    ],
  },
};
